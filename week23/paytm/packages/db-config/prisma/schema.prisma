// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id  Int @default(autoincrement()) @id
  username String @unique
  password String
  account Account[]
  Transcationssent TranscationData[] @relation("SenderByusername")
  TranscationRecived TranscationData[] @relation("receiverByusername")
}

// for relationship b/w fields we have to make sure it has bidirectional dont miss the names it should be same bro 

model Account {
  id Int @default(autoincrement()) @id
  userID Int 
  username String @unique
  // too add some field that has string contrains - MIGRATION PROCESS FIRST WE HAVE TO MAKE IT NULLABLE MEANS NOT REQUIRED FOR NOW AFTER THAT GENERATE THE PRISMA CLIENT AND WILL ADD THAT FIELD IN THE DB BY MANUALLY AFTER that will make it required by remove the question mark bro 
  balance Float
  User User @relation(fields: [userID], references: [id])
}


model TranscationData {
  id Int @default(autoincrement()) @id
  senderName String @unique
  receiverName String @unique
  SenderByusername User @relation("SenderByusername",fields: [senderName], references: [username])
  receiverByusername User @relation("receiverByusername", fields: [receiverName], references: [username])
  amount Int
  time DateTime @default(now())
  status String
}